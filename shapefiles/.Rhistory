rm(list = ls())
setwd("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles")
install.packages("rgdal")
library(rgdal)
countries <- readOGR("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "ne_50m_admin_0_countries")
print(proj4string(counties))
print(proj4string(countries))
plot(counties.rg, axes=TRUE, border="gray")
plot(counties, axes=TRUE, border="gray")
plot(countries, axes=TRUE, border="gray")
countries@data$ECONOMY
countries@data$SUBUNIT
countries@data$GEOUNIT
countries@data$REGION_WB
table(countries@data$REGION_WB
)
table(countries@data$REGION_UN)
regions <- countries@data$REGION_WB
regions
countries <- countries$GEOUNIT
regions
countries
regions[countries == "South Asia"]
regions
regions <- as.vector(countries@data$REGION_WB)
asia <- countries[which(countries@data$REGION_WB=="South Asia")]
countries[which(countries@data$REGION_WB=="South Asia")]
countries@data$REGION_WB=="South Asia")
countries@data$REGION_WB=="South Asia"
class(countries@data)
class(countries)
countries <- readOGR("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "ne_50m_admin_0_countries")
regions <- countries@data$REGION_WB
countries[which(countries@data$REGION_WB=="South Asia")]
countries@data$REGION_WB=="South Asia"
countries@data$GEOUNIT[which(countries@data$REGION_WB=="South Asia")]
regions
countries@data$GEOUNIT[which(countries@data$REGION_WB=="East Asia & Pacific")]
asia <- countries[which(countries@data$REGION_WB=="East Asia $ Pacific")]
asia@data
plot(asia, axes=TRUE, border="gray")
df <- as.data.frame(asia@data)
View(df)
countries@data$GEOUNIT[which(countries@data$REGION_WB=="East Asia & Pacific")]
countries[which(countries@data$REGION_WB=="East Asia & Pacific")]
asia <- countries
countries@data[which(countries@data$REGION_WB=="East Asia & Pacific")]
df <- asia@data
View(df)
asia@polygons
asia <- asia[which(asia$REGION_WB=="East Asia & Pacific")]
asia$REGION_WB
asia[1]
asia <- asia[which(asia$REGION_WB=="East Asia & Pacific"),]
plot(asia)
asia$ADMIN
countries <- c("Vietnam", "Thailand", "Singapore", "Philippines", "Malaysia", "Laos", "Indonesia", "Cambodia", "Myanmar")
countries <- readOGR("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "ne_50m_admin_0_countries")
countries_needed <- c("Vietnam", "Thailand", "Singapore", "Philippines", "Malaysia", "Laos", "Indonesia", "Cambodia", "Myanmar")
rm(list = ls())
setwd("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles")
library(rgdal)
countries <- readOGR("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "ne_50m_admin_0_countries")
countries_needed <- c("Vietnam", "Thailand", "Singapore", "Philippines", "Malaysia", "Laos", "Indonesia", "Cambodia", "Myanmar")
countries$ADMIN %in% countries_needed
asia <- countries[which(countries$ADMIN %in% countries_needed),]
plot(asia)
writeOGR(asia, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "asia_countries", driver="ESRI Shapefile")
install.packages("PBSmapping")
library(PBSmapping)
countries_needed <- c("Vietnam", "Thailand", "Singapore", "Philippines", "Malaysia", "Laos", "Indonesia", "Cambodia", "Myanmar", "China")
countries <- readOGR("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "ne_50m_admin_0_countries")
asia <- countries[which(countries$ADMIN %in% countries_needed),]
plot(asia)
asia_sub <- clipLines(asia, xlim = c(80 , 90) , ylim = c(20 , 30), keepExtra = TRUE )
importShapefile("ne_50m_admin_0_countries")
shape <- importShapefile("ne_50m_admin_0_countries")
asia_sub <- clipLines(asia, xlim = c(80 , 90) , ylim = c(20 , 30), keepExtra = TRUE )
asia_sub <- clipLines(shape, xlim = c(80 , 90) , ylim = c(20 , 30), keepExtra = TRUE )
asia_sub <- clipLines(shape, xlim = c(80 , 90) , ylim = c(20 , 30) )
View(asia_sub)
dfSL <- PolySet2SpatialLines( asia_sub )
class(dfSL)
rm(list = ls())
setwd("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles")
library(rgdal)
library(PBSmapping)
countries <- readOGR("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "ne_50m_admin_0_countries")
countries_needed <- c("Vietnam", "Thailand", "Singapore", "Philippines", "Malaysia", "Laos", "Indonesia", "Cambodia", "Myanmar", "China")
asia <- countries[which(countries$ADMIN %in% countries_needed),]
plot(asia)
writeOGR(asia, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "asia_countries", driver="ESRI Shapefile")
b <- bbox(asia)
View(b)
b
b[1,]
b[2,2] <- 23.5
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[2,2] <- 21.5
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[2,2] <- 18.5
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[2,2] <- 14.5
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[2,2] <- 10.5
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[2,2] <- 18.5
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[2,2] <- 22.5
plot(asia, xlim = b[1, ], ylim = b[2, ])
b
b[2,1] <- 0
plot(asia, xlim = b[1, ], ylim = b[2, ])
b2 <- t(b)
plot(asia, xlim = b2[1, ], ylim = b2[2, ])
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[2,]
b[2,1] <- 5
plot(asia, xlim = b[1, ], ylim = b[2, ])
b
b[1,1] <- 77
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[1,1] <- 90
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[1,1] <- 110
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[1,1] <- 100
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[1,2] <- 130
plot(asia, xlim = b[1, ], ylim = b[2, ])
b[1,2] <- 120
plot(asia, xlim = b[1, ], ylim = b[2, ])
b <- bbox(countries)
plot(countries, xlim = b[1, ], ylim = b[2, ])
b <- bbox(countries)
b
b[2,2] <- 22.5
b[2,1] <- 5
b[1,1] <- 100
b[1,2] <- 120
plot(countries, xlim = b[1, ], ylim = b[2, ])
install.packages("raster")
library(raster)
library(raster)
library(raster)
library(raster)
install.packages("raster")
library(raster)
install.packages("rgeos")
library(rgeos)
library(raster)
library(rgeos)
gClip <- function(shp, bb){
if(class(bb) == "matrix") b_poly <- as(extent(as.vector(t(bb))), "SpatialPolygons")
else b_poly <- as(extent(bb), "SpatialPolygons")
gIntersection(shp, b_poly, byid = T)
}
asia <- gClip(countries, b)
plot(asia)
b <- bbox(countries)
b[2,2] <- 24.5
b[2,1] <- 5
b[1,1] <- 90
b[1,2] <- 130
gClip <- function(shp, bb){
if(class(bb) == "matrix") b_poly <- as(extent(as.vector(t(bb))), "SpatialPolygons")
else b_poly <- as(extent(bb), "SpatialPolygons")
gIntersection(shp, b_poly, byid = T)
}
asia <- gClip(countries, b)
plot(asia)
b
plot(countries, xlim = b[1, ], ylim = b[2, ])
plot(countries, xlim = c(b[1,1 ],b[1,2]), ylim = b[2, ])
plot(countries, xlim = b[1, ], ylim = b[2, ])
library(raster)
library(rgeos)
gClip <- function(shp, bb){
if(class(bb) == "matrix") b_poly <- as(extent(as.vector(t(bb))), "SpatialPolygons")
else b_poly <- as(extent(bb), "SpatialPolygons")
gIntersection(shp, b_poly, byid = T)
}
asia <- gClip(countries, b)
plot(asia)
b[1,1] <- 95
b[1,2] <- 125
gClip <- function(shp, bb){
if(class(bb) == "matrix") b_poly <- as(extent(as.vector(t(bb))), "SpatialPolygons")
else b_poly <- as(extent(bb), "SpatialPolygons")
gIntersection(shp, b_poly, byid = T)
}
asia <- gClip(countries, b)
plot(asia)
asia@bbox
writeOGR(asia, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "asia_countries", driver="ESRI Shapefile")
class(asia)
asia$`3 1`
asia@polygons
class(asia)
asia <- SpatialPolygonsDataFrame(asia)
asia@polygons
asia@polygons[1]
test <- asia@polygons[1]
asia@polygons[1]
length(asia@polygons)
asia2 <- SpatialPolygonsDataFrame(asia, countries@data)
df <- countries@data
View(df)
df <- data.frame( ID=1:length(asia))
View(df)
( pid <- sapply(slot(asia, "polygons"), function(x) slot(x, "ID")) )
( p.df <- data.frame( ID=1:length(asia), row.names = pid) )
View(p.df)
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
class(p)
class(asia2)
writeOGR(asia2, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "asia_frame", driver="ESRI Shapefile")
countries_travelled <- c("Vietnam", "Thailand", "Philippines", "Laos", "Indonesia")
asia <- countries[which(countries$ADMIN %in% countries_travelled),]
plot(asia)
plot(asia)
countries_travelled <- c("Vietnam", "Thailand", "Philippines", "Laos", "Cambodia")
asia <- countries[which(countries$ADMIN %in% countries_travelled),]
plot(asia)
writeOGR(asia, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "travelled_countries", driver="ESRI Shapefile")
b <- bbox(countries)
b[2,2] <- 24.5
b[2,1] <- 5
b[1,1] <- 95
b[1,2] <- 130
library(raster)
library(rgeos)
gClip <- function(shp, bb){
if(class(bb) == "matrix") b_poly <- as(extent(as.vector(t(bb))), "SpatialPolygons")
else b_poly <- as(extent(bb), "SpatialPolygons")
gIntersection(shp, b_poly, byid = T)
}
asia <- gClip(countries, b)
plot(asia)
( pid <- sapply(slot(asia, "polygons"), function(x) slot(x, "ID")) )
( p.df <- data.frame( ID=1:length(asia), row.names = pid) )
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
writeOGR(asia2, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "asia_frame", driver="ESRI Shapefile")
rm(list = ls())
setwd("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles")
library(rgdal)
countries <- readOGR("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "ne_50m_admin_0_countries")
# get coordinates
b <- bbox(countries)
# create a box with desired subset
b[2,2] <- 24.5
b[2,1] <- 5
b[1,1] <- 95
b[1,2] <- 130
plot(countries, xlim = b[1, ], ylim = b[2, ])
# clip subselection
library(raster)
library(rgeos)
gClip <- function(shp, bb){
if(class(bb) == "matrix") b_poly <- as(extent(as.vector(t(bb))), "SpatialPolygons")
else b_poly <- as(extent(bb), "SpatialPolygons")
gIntersection(shp, b_poly, byid = T)
}
asia <- gClip(countries, b)
plot(asia)
( pid <- sapply(slot(asia, "polygons"), function(x) slot(x, "ID")) )
( p.df <- data.frame( ID=1:length(asia), row.names = pid) )
View(p.df)
p.df$country <- NA
p.df$country[1] <- "Laos"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
asia2$country
test <- asia2[which(asia2$country=="Laos"),]
plot(test)
p.df$country[1] <- "Thailand"
p.df$country[2] <- "Laos"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Laos"),]
plot(test)
test <- asia2[which(asia2$country=="Thiland"),]
plot(test)
test <- asia2[which(asia2$country=="Thailand"),]
plot(test)
p.df$country[1] <- "Vietnam"
p.df$country[2] <- "Thailand"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Thailand"),]
plot(test)
p.df$country[3] <- "Laos"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Laos"),]
plot(test)
p.df$country[4] <- "Laos"
p.df$country <- NA
p.df$country[4] <- "Laos"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Laos"),]
plot(test)
p.df$country <- NA
p.df$country[5] <- "Laos"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Laos"),]
plot(test)
p.df$country[6] <- "Laos"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Laos"),]
plot(test)
p.df$country <- NA
p.df$country[7] <- "Laos"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Laos"),]
plot(test)
p.df$country <- NA
p.df$country[8] <- "Laos"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Laos"),]
plot(test)
p.df$country <- NA
p.df$country[6] <- "Laos"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Laos"),]
plot(test)
p.df$country <- NA
p.df$country[9] <- "Cambodia"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Cambodia"),]
plot(test)
p.df$country <- NA
p.df$country[10] <- "Cambodia"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Cambodia"),]
plot(test)
p.df$country <- NA
p.df$country[11] <- "Cambodia"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Cambodia"),]
plot(test)
p.df$country <- NA
p.df$country[12] <- "Cambodia"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Cambodia"),]
plot(test)
rm(list = ls())
setwd("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles")
library(rgdal)
countries <- readOGR("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "ne_50m_admin_0_countries")
# get coordinates
b <- bbox(countries)
# create a box with desired subset
b[2,2] <- 24.5
b[2,1] <- 5
b[1,1] <- 95
b[1,2] <- 130
plot(countries, xlim = b[1, ], ylim = b[2, ])
# clip subselection
library(raster)
library(rgeos)
gClip <- function(shp, bb){
if(class(bb) == "matrix") b_poly <- as(extent(as.vector(t(bb))), "SpatialPolygons")
else b_poly <- as(extent(bb), "SpatialPolygons")
gIntersection(shp, b_poly, byid = T)
}
asia <- gClip(countries, b)
# Extract polygon ID's
( pid <- sapply(slot(asia, "polygons"), function(x) slot(x, "ID")) )
# Create dataframe with correct rownames
( p.df <- data.frame( ID=1:length(asia), row.names = pid) )
# add country names
p.df$country <- NA
p.df$country[1] <- "Vietnam"
p.df$country[2] <- "Thailand"
p.df$country[4] <- "Philippines"
p.df$country[6] <- "Laos"
p.df$country[12] <- "Cambodia"
# Try coersion again and check class
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Cambodia"),]
plot(test)
writeOGR(asia2, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "asia_frame", driver="ESRI Shapefile")
b
mean(b[1,])
mean(b[2,])
asia2$country
vietnam <- asia2[which(asia2$country=="Vietnam"),]
plot(vietnam)
laos <- asia2[which(asia2$country=="Laos"),]
plot(laos)
thailand <- asia2[which(asia2$country=="Thailand"),]
plot(thailand)
philippines <- asia2[which(asia2$country=="Philippines"),]
plot(philippines)
cambodia <- asia2[which(asia2$country=="Cambodia"),]
plot(cambodia)
writeOGR(vietnam, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "vietnam", driver="ESRI Shapefile")
writeOGR(laos, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "laos", driver="ESRI Shapefile")
writeOGR(thailand, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "thailand", driver="ESRI Shapefile")
writeOGR(philippines, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "philippines", driver="ESRI Shapefile")
writeOGR(cambodia, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "cambodia", driver="ESRI Shapefile")
rm(list = ls())
setwd("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles")
library(rgdal)
countries <- readOGR("C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "ne_50m_admin_0_countries")
b <- bbox(countries)
b[2,2] <- 29.5
b[2,1] <- 0
b[1,1] <- 75
b[1,2] <- 150
plot(countries, xlim = b[1, ], ylim = b[2, ])
library(raster)
library(rgeos)
gClip <- function(shp, bb){
if(class(bb) == "matrix") b_poly <- as(extent(as.vector(t(bb))), "SpatialPolygons")
else b_poly <- as(extent(bb), "SpatialPolygons")
gIntersection(shp, b_poly, byid = T)
}
asia <- gClip(countries, b)
( pid <- sapply(slot(asia, "polygons"), function(x) slot(x, "ID")) )
( p.df <- data.frame( ID=1:length(asia), row.names = pid) )
p.df$country <- NA
p.df$country[1] <- "Vietnam"
p.df$country[2] <- "Thailand"
p.df$country[4] <- "Philippines"
p.df$country[6] <- "Laos"
p.df$country[12] <- "Cambodia"
asia2 <- SpatialPolygonsDataFrame(asia, p.df)
test <- asia2[which(asia2$country=="Cambodia"),]
plot(test)
writeOGR(asia2, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "asia_frame", driver="ESRI Shapefile")
writeOGR(asia2, "C:\\Users\\EK\\Documents\\web\\react\\blog\\shapefiles", "asia_frame", driver="ESRI Shapefile")
